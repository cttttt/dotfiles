" vim:foldmethod=marker
"

" Helps airline glyphs display in Windows
set encoding=utf-8

" setup tips {{{
"
" Before this .vimrc can be used:
"
" - Install Vundle:
"
"   git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
"
" Run PluginSearch! (with a bang) the first time.  This will ensure that the
" cache is built up.
"
" And to install the included plugins:
"
"   vim +PluginInstall +qa
"
" After editing the config, to uninstall unused plugins:
"
"   vim +PluginClean
"
" }}}

" vundle {{{
set nocompatible
filetype off

" set runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

" all of your plugins must be added before the following line
call vundle#end()
filetype plugin indent on

" :PluginList
" - List configured plugins.
" :PluginInstall
" - Install plugins.  Append ! to update.
" :PluginUpdate
" - Update plugins.
" :PluginSearch foo
" - Searches for a plugin.  Append ! to refresh local cache.
" :PluginClean
" - Remove unused plugins.  Append ! for non-interactive deinstall.
"
" See :help vundle for details.

" }}}

" plugins {{{

" themes {{{
Plugin 'CruizeMissile/Revolution.vim'
Plugin 'jlesquembre/peaksea'
Plugin 'romainl/flattened'
Plugin 'jaimebuelta/jaime-vim-colorscheme'
" }}}

" vim-javascript - Javascript syntax and tweaks {{{
Plugin 'pangloss/vim-javascript'
" }}}

" vim-json - JSON syntax and tweaks {{{
Plugin 'elzr/vim-json'
" }}}

" syntastic - Linting integration {{{
Plugin 'scrooloose/syntastic'

" From the documentation...
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0

" Customizations
let g:syntastic_javascript_checkers = ['eslint']
" }}}

" nerdtree - File tree {{{
Plugin 'scrooloose/nerdtree'
" }}}

" airline - Status bar {{{
Plugin 'bling/vim-airline'

" Use special symbols in the status bar.
let g:airline_powerline_fonts = 1

" Ensure that airline is visible at all times.
set laststatus=2

" List buffers along the top
let g:airline#extensions#tabline#enabled = 1

" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'
" }}}

" ctrlp - Fuzzy search {{{
Plugin 'kien/ctrlp.vim'
" }}}

" indentguides - Show vertical lines for indentation levels {{{
Plugin 'nathanaelkane/vim-indent-guides'
" }}}

" delimitMate - Handle automatically matching pairs of parens/brackets/etc {{{
Plugin 'Raimondi/delimitMate'
" }}}

" undotree - Visualize the undo tree {{{
Plugin 'mbbill/undotree'
" }}}

" fugitive - Git bindings and commands {{{
Plugin 'tpope/vim-fugitive'
" }}}

" autoclose-tag - Automatically close HTML tags {{{
Plugin 'amirh/HTML-AutoCloseTag'
" }}}

" emmet - Expand macros to HTML {{{
Plugin 'mattn/emmet-vim'
" }}}

" bufexplorer - A rich buffer list {{{
Plugin 'vim-scripts/bufexplorer.zip'
" }}}

" }}}

" bindings  {{{
let mapleader=';'
nmap <C-e> :NERDTree<CR>
nmap <Leader>e :NERDTreeFind<CR>
nmap <Leader>u :UndotreeToggle<CR>
" }}}

" prefs {{{
set hidden

" For some reason, on the version of vim I have on my server, json files are
" taken as Javascript.
autocmd BufNewFile,BufRead *.json set ft=json

" Finally caving and expanding tabs, but only for Javascript
autocmd FileType javascript set expandtab

" Hide node_modules directories in NERDTree.  Show them with 'f'.
let NERDTreeIgnore=['^node_modules$[[dir]]']

" Show the help for BufExplorer by default.  The bindings are kinda arbitrary.
let g:bufExplorerDefaultHelp=1

" I think one of the whole points of BufExplorer is to make it easy to delete
" NoName buffers.
let g:bufExplorerShowNoName=1

set directory-=.
let &directory=substitute(&directory,',','//,','')
" }}}

" asthetics {{{
 
colorscheme jaime
let g:airline_theme='molokai'
" colorscheme flattened_dark
syntax on

" In gvim, use a font the includes the special powerline symbols.
set guifont=Meslo_LG_S_for_Powerline:h9:cANSI,Menlo\ for\ Powerline:h11,Meslo\ LG\ S\ Regular\ for\ Powerline:h11

" Show normal mode commands
set showcmd

" Highlight all matches after a search
set hls

" Hide the toolbar in the GUI
set guioptions-=T

" }}}

" indentation {{{
set tabstop=8
set shiftwidth=4
set softtabstop=4
set noexpandtab
" }}}

" file specific settings {{{
augroup file_specific_settings
    autocmd!
    autocmd BufEnter .jshintrc setlocal filetype=json
    autocmd BufEnter .eslintrc setlocal filetype=json
augroup END
" }}}

" windows-specific-settings {{{
if has('win32')
    let $PATH = 'C:\Program Files (x86)\Git\bin;' . $PATH
    set shell=C:\Progra~2\Git\bin\bash.exe
endif
" }}}

" - chris
